package im.actor.core.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class ApiDocumentEncryptionInfo extends BserObject {

    private int realFileSize;
    private String keyAlg;
    private byte[] key;

    public ApiDocumentEncryptionInfo(int realFileSize, @NotNull String keyAlg, @NotNull byte[] key) {
        this.realFileSize = realFileSize;
        this.keyAlg = keyAlg;
        this.key = key;
    }

    public ApiDocumentEncryptionInfo() {

    }

    public int getRealFileSize() {
        return this.realFileSize;
    }

    @NotNull
    public String getKeyAlg() {
        return this.keyAlg;
    }

    @NotNull
    public byte[] getKey() {
        return this.key;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.realFileSize = values.getInt(1);
        this.keyAlg = values.getString(2);
        this.key = values.getBytes(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.realFileSize);
        if (this.keyAlg == null) {
            throw new IOException();
        }
        writer.writeString(2, this.keyAlg);
        if (this.key == null) {
            throw new IOException();
        }
        writer.writeBytes(3, this.key);
    }

    @Override
    public String toString() {
        String res = "struct DocumentEncryptionInfo{";
        res += "realFileSize=" + this.realFileSize;
        res += ", keyAlg=" + this.keyAlg;
        res += ", key=" + byteArrayToString(this.key);
        res += "}";
        return res;
    }

}
